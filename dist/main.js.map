{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/puzzle/puzzle.component.html","webpack:///./src/app/puzzle/puzzle.component.scss","webpack:///./src/app/puzzle/puzzle.component.ts","webpack:///./src/app/shared/material.module.ts","webpack:///./src/app/shared/models/log.model.ts","webpack:///./src/app/shared/models/puzzle.model.ts","webpack:///./src/app/shared/samples.ts","webpack:///./src/app/shared/services/logger.service.ts","webpack:///./src/app/shared/services/logger.ts","webpack:///./src/app/shared/services/validater.ts","webpack:///./src/app/shared/solvers.module.ts","webpack:///./src/app/shared/solvers/checkColKnownUnknown.ts","webpack:///./src/app/shared/solvers/checkColTotals.ts","webpack:///./src/app/shared/solvers/checkColsThreeNulls.ts","webpack:///./src/app/shared/solvers/checkColsTwoNulls.ts","webpack:///./src/app/shared/solvers/checkMiddle.ts","webpack:///./src/app/shared/solvers/checkRowKnownUnknown.ts","webpack:///./src/app/shared/solvers/checkRowTotals.ts","webpack:///./src/app/shared/solvers/checkRowsThreeNulls.ts","webpack:///./src/app/shared/solvers/checkRowsTwoNulls.ts","webpack:///./src/app/shared/solvers/checkTwins.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAE;YAC9D,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACjE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE;YACpE,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACpE,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACjE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAE;YACpE,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YAC9D,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAE;YACpE,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YAC9D,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAA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I,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACpE,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,CAAE;YACpE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAE;YAC3D,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACpE,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAE;YAC9D,CAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACjE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAE;YACpE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,CAAE;YACjE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAE;YACjE,CAAE,IAAI,EAAE,CAAC,EAAE,IAAI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AK,EAAE,EAAE,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,EAAE;YAC9C,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACvE,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YAC1E,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YAC1E,CAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YAC1E,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACvE,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACvE,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACvE,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;YACvE,CAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<!-- <div [ngClass]=\\\"currentTheme\\\">\\n  <div class=\\\"body-container\\\" fxLayout=\\\"column\\\">\\n    <app-puzzle></app-puzzle>\\n  </div>\\n</div> -->\\n\\n<div class=\\\"body-container\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center start\\\">\\n  <app-puzzle></app-puzzle>\\n</div>\\n\"","module.exports = \".body-container {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  background-color: lightgray; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzpcXFVzZXJzXFxKaW1cXERvY3VtZW50c1xcQW5ndWxhclxcbmdCaW5hcnlQdXp6bGUvc3JjXFxhcHBcXGFwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixNQUFNO0VBQ04sU0FBUztFQUNULE9BQU87RUFDUCxRQUFRO0VBQ1IsMkJBQTJCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYm9keS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xyXG59XHJcbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './shared/material.module';\nimport { SolversModule } from './shared/solvers.module';\nimport { PuzzleComponent } from './puzzle/puzzle.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PuzzleComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    SolversModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<mat-card class=\\\"puzzle-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Binary Puzzle</mat-card-title>\\n    <mat-card-subtitle></mat-card-subtitle>\\n  </mat-card-header>\\n  <mat-card-content fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around end\\\">\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Grid size\\\" [(value)]=\\\"gridSize\\\" (selectionChange)=\\\"reset()\\\">\\n        <mat-option *ngFor=\\\"let size of gridSizes\\\" [value]=\\\"size.value\\\">\\n          {{size.label}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <mat-form-field>\\n      <mat-select placeholder=\\\"Pre built\\\" [(value)]=\\\"prebuilt\\\" (selectionChange)=\\\"setPrebuilt()\\\">\\n        <mat-option *ngFor=\\\"let puzzle of gridPuzzles\\\" [value]=\\\"puzzle.id\\\">\\n          {{puzzle.label}}\\n        </mat-option>\\n      </mat-select>\\n    </mat-form-field>\\n    <table class=\\\"puzzle\\\">\\n      <tr *ngFor=\\\"let row of tableData; let rowIdx = index\\\">\\n        <td *ngFor=\\\"let col of row; let colIdx = index\\\" id=\\\"cell-{{ rowIdx }}-{{ colIdx }}\\\"\\n          (click)=\\\"updateCell($event.target.id)\\\" [ngClass]=\\\"{ 'given': isCellGiven(rowIdx, colIdx) }\\\">\\n          {{ col.value }}\\n        </td>\\n      </tr>\\n    </table>\\n  </mat-card-content>\\n  <mat-card-actions fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\n    <button mat-raised-button (click)=\\\"setPrebuilt()\\\" [disabled]=\\\"solveRunning\\\">Reset</button>\\n    <button mat-raised-button (click)=\\\"solve()\\\" [disabled]=\\\"solveRunning\\\">Solve</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","module.exports = \".puzzle-card {\\n  margin: 24px;\\n  background-color: lightblue;\\n  color: orangered;\\n  font-weight: bold; }\\n  .puzzle-card .mat-card-header .mat-card-title {\\n    color: darkblue; }\\n  .puzzle-card mat-select {\\n    padding: 4px; }\\n  .puzzle-card .puzzle {\\n    border: 1px;\\n    margin: 8px; }\\n  .puzzle-card .puzzle td {\\n      background-color: whitesmoke;\\n      min-width: 30px;\\n      height: 30px;\\n      text-align: center; }\\n  .puzzle-card .puzzle td.given {\\n      color: black; }\\n  .puzzle-card .mat-card-actions .mat-raised-button {\\n    margin: 12px 16px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHV6emxlL0M6XFxVc2Vyc1xcSmltXFxEb2N1bWVudHNcXEFuZ3VsYXJcXG5nQmluYXJ5UHV6emxlL3NyY1xcYXBwXFxwdXp6bGVcXHB1enpsZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUVFLFlBQVk7RUFDWiwyQkFBMkI7RUFFM0IsZ0JBQWdCO0VBQ2hCLGlCQUFpQixFQUFBO0VBTm5CO0lBU0ksZUFBZSxFQUFBO0VBVG5CO0lBYUksWUFBWSxFQUFBO0VBYmhCO0lBaUJJLFdBQVc7SUFDWCxXQUFXLEVBQUE7RUFsQmY7TUFxQk0sNEJBQTRCO01BQzVCLGVBQWU7TUFDZixZQUFZO01BQ1osa0JBQWtCLEVBQUE7RUF4QnhCO01BMkJNLFlBQVksRUFBQTtFQTNCbEI7SUFnQ0ksaUJBQWlCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wdXp6bGUvcHV6emxlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnB1enpsZS1jYXJkIHtcclxuICAvLyBtYXgtd2lkdGg6IDQwMHB4O1xyXG4gIG1hcmdpbjogMjRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGJsdWU7XHJcbiAgLy8gY29sb3I6IG1hcm9vbjtcclxuICBjb2xvcjogb3JhbmdlcmVkO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG5cclxuICAubWF0LWNhcmQtaGVhZGVyIC5tYXQtY2FyZC10aXRsZSB7XHJcbiAgICBjb2xvcjogZGFya2JsdWU7XHJcbiAgfVxyXG5cclxuICBtYXQtc2VsZWN0IHtcclxuICAgIHBhZGRpbmc6IDRweDtcclxuICB9XHJcblxyXG4gIC5wdXp6bGUge1xyXG4gICAgYm9yZGVyOiAxcHg7XHJcbiAgICBtYXJnaW46IDhweDtcclxuXHJcbiAgICB0ZCB7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlc21va2U7XHJcbiAgICAgIG1pbi13aWR0aDogMzBweDtcclxuICAgICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICB0ZC5naXZlbiB7XHJcbiAgICAgIGNvbG9yOiBibGFjaztcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5tYXQtY2FyZC1hY3Rpb25zIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW46IDEycHggMTZweDtcclxuICB9XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { GridSizes } from '../shared/models/grid.model';\r\nimport { GridPuzzles } from '../shared/models/grid.model';\r\nimport { PuzzleLevels } from '../shared/models/puzzle.model';\r\nimport { LogLevels } from '../shared/models/log.model';\r\nimport { Samples } from '../shared/samples';\r\n\r\nimport { Logger } from '../shared/services/logger';\r\nimport { LoggerService } from '../shared/services/logger.service';\r\nimport { Validater } from '../shared/services/validater';\r\n\r\nimport { CheckMiddle } from '../shared/solvers/checkMiddle';\r\nimport { CheckTwins } from '../shared/solvers/checkTwins';\r\nimport { CheckRowTotals } from '../shared/solvers/checkRowTotals';\r\nimport { CheckColTotals } from '../shared/solvers/checkColTotals';\r\nimport { CheckColKnownUnknown } from '../shared/solvers/checkColKnownUnknown';\r\nimport { CheckRowKnownUnknown } from '../shared/solvers/checkRowKnownUnknown';\r\nimport { CheckRowsThreeNulls } from '../shared/solvers/checkRowsThreeNulls';\r\nimport { CheckColsThreeNulls } from '../shared/solvers/checkColsThreeNulls';\r\nimport { CheckRowsTwoNulls } from '../shared/solvers/checkRowsTwoNulls';\r\nimport { CheckColsTwoNulls } from '../shared/solvers/checkColsTwoNulls';\r\n\r\n@Component({\r\n  selector: 'app-puzzle',\r\n  templateUrl: './puzzle.component.html',\r\n  styleUrls: ['./puzzle.component.scss']\r\n})\r\nexport class PuzzleComponent implements OnInit {\r\n\r\n  // What's left?\r\n  // Capture all moves\r\n  //   Use moves for replay\r\n  // Change bg color of recent click/focus\r\n  // Add all the \"solvers\" into their own module (or class?)\r\n  // Additional solvers:\r\n  //    All but one, allow no three in a row of other (2 - Hard)\r\n  //      CheckRowsNoThrees/CheckColsNoThrees?\r\n  //      example: 12VH 2018-11-29 (row 11)\r\n  //      1 0 0 1 0 0 1 0 _ 1 _ _\r\n  //      first blank should not be a zero, would leave 3 1's in a row\r\n  //    Row compare (3 - Challenging)\r\n  //      If all but one in one row, and matches a row with all,\r\n  //        then the missing one is opposite\r\n  //        example: 8H 2018-11-17 (row 2)\r\n  //        0 1 1 0 0 1 1 0\r\n  //        0 _ 1 0 _ 1 _ 0\r\n  //        second blank must be a 1\r\n  //      When 2 left, make them opposite\r\n  //        example:\r\n  //        0 1 1 0 1 0 1 0\r\n  //        0 1 1 0 1 _ _ 0\r\n  //        blanks should be 1 0\r\n\r\n  tableData = [];\r\n  gridSize = 8;\r\n  puzzleLevel = PuzzleLevels.Easy;\r\n  initLogLevel = LogLevels.OFF;\r\n\r\n  gridSizes: GridSizes[] = [\r\n    { value: 6, label: '6 x 6' },\r\n    { value: 8, label: '8 x 8' },\r\n    { value: 10, label: '10 x 10' },\r\n    { value: 12, label: '12 x 12' }\r\n  ];\r\n\r\n  abort = false;\r\n  solved = false;\r\n  solvable = true;\r\n  solveRunning = false;\r\n\r\n  prebuilt = 0;\r\n\r\n  gridPuzzles: GridPuzzles[] = Samples;\r\n\r\n  constructor(private loggerService: LoggerService) { }\r\n\r\n  ngOnInit() {\r\n    this.loggerService.setLogLevel(this.initLogLevel);\r\n    Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] ngOnInit()');\r\n    this.initTableData();\r\n  }\r\n\r\n  initTableData() {\r\n    Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] initTableData()');\r\n    this.tableData = [];\r\n    for (let row = 0; row < this.gridSize; row++) {\r\n      const rowData = [];\r\n      for (let col = 0; col < this.gridSize; col++) {\r\n        const colData = { value: null, given: false };\r\n        rowData.push(colData);\r\n      }\r\n      this.tableData.push(rowData);\r\n    }\r\n    if (this.showLog(LogLevels.TRACE)) {\r\n      console.table(this.tableData);\r\n    }\r\n  }\r\n\r\n  showLog(myLevel) {\r\n    return this.loggerService.getLogLevel() >= myLevel;\r\n  }\r\n\r\n  updateCell(cellId: string) {\r\n    // Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] updateCell() cellId: ' + cellId);\r\n    const rowIdx = +cellId.split('-')[1];\r\n    const colIdx = +cellId.split('-')[2];\r\n    // Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] updateCell() rowIdx: ' + rowIdx + ', colIdx: ' + colIdx);\r\n    const currVal = this.tableData[rowIdx][colIdx].value;\r\n\r\n    switch (currVal) {\r\n      case null:\r\n        this.tableData[rowIdx][colIdx].value = 0;\r\n        this.tableData[rowIdx][colIdx].given = true;\r\n        break;\r\n      case 0:\r\n        this.tableData[rowIdx][colIdx].value = 1;\r\n        this.tableData[rowIdx][colIdx].given = true;\r\n        break;\r\n      case 1:\r\n        this.tableData[rowIdx][colIdx].value = null;\r\n        this.tableData[rowIdx][colIdx].given = false;\r\n        break;\r\n      default: break;\r\n    }\r\n  }\r\n\r\n  isCellGiven(rowIdx, colIdx) {\r\n    // Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] isCellGiven() rowIdx: ' + rowIdx + ', colIdx: ' + colIdx);\r\n    return this.tableData[rowIdx][colIdx].given;\r\n  }\r\n\r\n  solve() {\r\n    Logger.log(true, '[puzzle] solve()');\r\n    const startTime = performance.now();\r\n\r\n    this.solveRunning = true;\r\n    let moveMade = false;\r\n    // setTimeout(() => this.abort = true, 1000);\r\n    let counter = 0;\r\n    while (!this.solved && this.solvable && !this.abort) {\r\n      counter++;\r\n      Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() PASS: ' + counter);\r\n\r\n      // --- START --- EASY level moves\r\n      // Check for MIDDLES\r\n      Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for middles');\r\n      let middleMade = true;\r\n      while (middleMade) {\r\n        middleMade = CheckMiddle.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n        if (middleMade) {\r\n          Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Middles: MOVEMADE');\r\n          moveMade = true;\r\n        }\r\n      }\r\n\r\n      if (!moveMade) {\r\n        // Check for TWINS\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for twins');\r\n        let twinsMade = true;\r\n        while (twinsMade) {\r\n          twinsMade = CheckTwins.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (twinsMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Twins: MOVEMADE');\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!moveMade) {\r\n        // Check for ROW-TOTAL-REACHED\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for row total');\r\n        let rowsTotMade = true;\r\n        while (rowsTotMade) {\r\n          rowsTotMade = CheckRowTotals.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (rowsTotMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Row Totals: MOVEMADE');\r\n            moveMade = true;\r\n          }\r\n        }\r\n\r\n        // Check for COL-TOTAL-REACHED\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for col total');\r\n        let colsTotMade = true;\r\n        while (colsTotMade) {\r\n          colsTotMade = CheckColTotals.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (colsTotMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Col Totals: MOVEMADE');\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n      // --- END --- EASY level moves\r\n\r\n      // --- START --- HARD level moves\r\n      if (!moveMade) {\r\n        // Check for ROWS-KNOWN-UNKNOWN\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for row known/unknown');\r\n        let rowsKnownUnknownMade = true;\r\n        while (rowsKnownUnknownMade) {\r\n          rowsKnownUnknownMade = CheckRowKnownUnknown.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (rowsKnownUnknownMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Row Known/Unknown: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n\r\n        // Check for COLS-KNOWN-UNKNOWN\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for col known/unknown');\r\n        let colsKnownUnknownMade = true;\r\n        while (colsKnownUnknownMade) {\r\n          colsKnownUnknownMade = CheckColKnownUnknown.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (colsKnownUnknownMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Col Known/Unknown: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!moveMade) {\r\n        // Check for ROWS THREE NULLS\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for row three nulls');\r\n        let rowsThreeNullMade = true;\r\n        while (rowsThreeNullMade) {\r\n          rowsThreeNullMade = CheckRowsThreeNulls.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (rowsThreeNullMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Row three nulls: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n\r\n        // Check for COLS THREE NULLS\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for col three nulls');\r\n        let colsThreeNullMade = true;\r\n        while (colsThreeNullMade) {\r\n          colsThreeNullMade = CheckColsThreeNulls.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (colsThreeNullMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Col three nulls: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!moveMade) {\r\n        // Check for ROWS TWO NULLS\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for row two nulls');\r\n        let rowsTwoNullMade = true;\r\n        while (rowsTwoNullMade) {\r\n          rowsTwoNullMade = CheckRowsTwoNulls.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (rowsTwoNullMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Row two nulls: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n\r\n        // Check for COLS TWO NULLS\r\n        Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Check for col two nulls');\r\n        let colsTwoNullMade = true;\r\n        while (colsTwoNullMade) {\r\n          colsTwoNullMade = CheckColsTwoNulls.check(this.gridSize, this.tableData, this.loggerService.getLogLevel());\r\n          if (colsTwoNullMade) {\r\n            Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] solve() Col two nulls: MOVEMADE');\r\n            moveMade = true;\r\n            this.puzzleLevel = PuzzleLevels.Hard;\r\n          }\r\n        }\r\n      }\r\n      // --- END --- HARD level moves\r\n\r\n      // Check for SOLVED\r\n      this.solved = this.isSolved();\r\n      if (this.solved) {\r\n        Logger.log(true, '[puzzle] solve() SOLVED');\r\n        Logger.log(true, '[puzzle] solve() Puzzle Level: ' + this.getPuzzleLevel(this.puzzleLevel));\r\n        Logger.log(true, '[puzzle] Solution is '\r\n          + (Validater.validate(true, this.gridSize, this.tableData) ? 'VALID' : 'INVALID'));\r\n      } else {\r\n        if (moveMade) {\r\n          // Logger.log(true, '[puzzle] solve() Pass complete!');\r\n          moveMade = false;\r\n        } else {\r\n          this.solvable = false;\r\n          Logger.log(true, '[puzzle] solve() Cant solve');\r\n          Logger.log(true, '[puzzle] solve() Current known level: ' + this.getPuzzleLevel(this.puzzleLevel));\r\n        }\r\n      }\r\n\r\n      if (counter > 100) {\r\n        Logger.log(true, '[puzzle] solve() ABORTING');\r\n        this.abort = true;\r\n      }\r\n    }\r\n    this.solveRunning = false;\r\n    this.abort = false;\r\n    this.solved = false;\r\n    this.solvable = true;\r\n\r\n    const endTime = performance.now();\r\n    Logger.log(true, '[puzzle] solve() Execution time: ' + Math.round((endTime - startTime) * 1000) / 1000 + ' milliseconds.');\r\n  }\r\n\r\n  isSolved(): boolean {\r\n    Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] isSolved()');\r\n    // Check to see if there is a value in every position\r\n    for (let row = 0; row < this.gridSize; row++) {\r\n      for (let col = 0; col < this.gridSize; col++) {\r\n        if (this.tableData[row][col].value === null) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  getPuzzleLevel(level): string {\r\n    switch (level) {\r\n      case PuzzleLevels.Easy: return '(1) EASY';\r\n      case PuzzleLevels.Hard: return '(2) HARD';\r\n      case PuzzleLevels.Challenging: return '(3) CHALLENGING';\r\n      case PuzzleLevels.VeryHard: return '(4) VERY HARD';\r\n      default: return 'UNKNOWN';\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] reset()');\r\n    this.abort = false;\r\n    this.solved = false;\r\n    this.solvable = true;\r\n    this.initTableData();\r\n    this.prebuilt = 0;\r\n    this.puzzleLevel = PuzzleLevels.Easy;\r\n  }\r\n\r\n  setPrebuilt() {\r\n    Logger.log(this.showLog(LogLevels.TRACE), '[puzzle] setPrebuilt() prebuilt: ' + this.prebuilt);\r\n    const prebuilt = this.prebuilt;\r\n    const value = this.gridPuzzles[this.prebuilt].value;\r\n    if (value === 0) {\r\n      this.reset();\r\n    } else {\r\n      this.gridSize = value;\r\n      this.reset();\r\n      this.prebuilt = prebuilt;\r\n      for (let row = 0; row < this.gridSize; row++) {\r\n        for (let col = 0; col < this.gridSize; col++) {\r\n          const gridVal = this.gridPuzzles[prebuilt].grid[row][col];\r\n          this.tableData[row][col].value = gridVal;\r\n          const given = ([0, 1].indexOf(gridVal) > -1) ? true : false;\r\n          this.tableData[row][col].given = given;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatAutocompleteModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule\n} from '@angular/material';\n\n@NgModule({\n  imports: [\n    FlexLayoutModule,\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ],\n  exports: [\n    FlexLayoutModule,\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule\n  ]\n})\nexport class MaterialModule { }\n","export enum LogLevels {\r\n  OFF = 0,\r\n  ERROR = 1,\r\n  INFO = 2,\r\n  TRACE = 3\r\n}\r\n","export enum PuzzleLevels {\r\n  Easy = 0,\r\n  Hard = 1,\r\n  Challenging = 2,\r\n  VeryHard = 3\r\n}\r\n","import { GridPuzzles } from '../shared/models/grid.model';\r\n\r\nexport const Samples: GridPuzzles[] = [\r\n  { id: 0, value: 0, label: 'None', grid: [] },\r\n  { id: 1, value: 6, label: '6H Test 1', grid: [\r\n    [ 1, 1, null, null, null, null ],\r\n    [ null, null, 0, null, null, null ],\r\n    [ 1, null, null, null, null, 1 ],\r\n    [ null, null, null, null, null, null ],\r\n    [ null, 0, null, null, null, 1 ],\r\n    [ null, null, null, 1, 1, null ]\r\n  ] },\r\n  { id: 2, value: 6, label: '6H Test 2', grid: [\r\n    [ 0, null, null, 0, null, 0 ],\r\n    [ null, null, null, null, null, null ],\r\n    [ 1, 1, null, null, 1, null ],\r\n    [ null, null, 1, null, 1, 1 ],\r\n    [ null, 1, null, null, null, null ],\r\n    [ 0, null, null, null, null, null ]\r\n  ] },\r\n  { id: 3, value: 8, label: '8H 2018-11-13', grid: [\r\n    [ 1, 1, null, null, null, null, 1, null ],\r\n    [ null, null, null, 0, null, null, null, null ],\r\n    [ 0, null, 1, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, 1 ],\r\n    [ null, null, 1, null, null, null, 1, null ],\r\n    [ null, 0, null, 0, null, null, null, 0 ],\r\n    [ null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, 0, null, 1, 1, null ]\r\n  ] },\r\n  { id: 4, value: 8, label: '8H 2018-11-16', grid: [\r\n    [ 1, null, null, null, null, 1, null, null ],\r\n    [ null, null, null, null, null, null, null, 1 ],\r\n    [ 1, null, null, 0, null, null, null, null ],\r\n    [ null, null, 1, null, 1, null, null, 1 ],\r\n    [ null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, 1, null, 1, null, 1 ],\r\n    [ null, null, null, null, null, 1, null, 1 ],\r\n    [ 1, null, 1, null, null, null, null, null ]\r\n  ] },\r\n  { id: 5, value: 8, label: '8H 2018-11-17', grid: [\r\n    [ 1, 1, null, null, null, null, 1, null ],\r\n    [ null, null, null, 0, null, 1, null, 0 ],\r\n    [ null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, 0, 0, null, null, 0 ],\r\n    [ 1, null, null, 1, null, 1, 1, null ],\r\n    [ null, null, null, null, null, null, null, null ],\r\n    [ null, 0, 0, null, null, 1, null, null ]\r\n  ] },\r\n  { id: 6, value: 10, label: '10H Test 1', grid: [\r\n    [ 1, 0, 1, 1, 0, null, null, null, null, 1 ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, 0, 0, 1, 0, null, null, null, null, 1 ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, 0, 1, 0, null, null, null, null, 1, 0 ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, 0, 1, 1, 0, 1, null, null, null, null ]\r\n  ] },\r\n  { id: 7, value: 10, label: '10H Test 2', grid: [\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, 1, 0, null, null, 0, 1, null, 0, 1 ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ]\r\n  ] },\r\n  { id: 8, value: 10, label: '10H 2018-11-10', grid: [\r\n    [ null, 1, null, null, 0, null, null, null, null, null ],\r\n    [ null, null, null, null, null, 1, null, 0, null, 0 ],\r\n    [ null, null, null, 0, null, null, null, null, null, null ],\r\n    [ null, null, null, null, 1, null, null, 1, null, 1 ],\r\n    [ null, null, null, 1, null, null, null, 1, 0, null ],\r\n    [ null, null, 0, null, 1, null, null, null, null, null ],\r\n    [ null, 1, null, null, null, null, 1, null, null, 1 ],\r\n    [ 1, 1, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, 1, 1, null, 0, null ],\r\n    [ 0, null, 0, null, null, null, null, null, null, null ]\r\n  ] },\r\n  { id: 9, value: 10, label: '10H 2018-11-12', grid: [\r\n    [ 1, 1, null, null, null, null, null, null, null, 1 ],\r\n    [ 0, null, 0, null, null, 0, 0, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, 1, null ],\r\n    [ null, null, 1, null, null, null, null, 1, null, null ],\r\n    [ null, 0, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, 0, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, 1, null, null, 1 ],\r\n    [ null, null, 1, null, 0, null, null, 0, null, null ],\r\n    [ null, 1, 1, null, null, null, null, 0, null, 1 ]\r\n  ] },\r\n  { id: 10, value: 10, label: '10H 2018-12-04', grid: [\r\n    [ null, null, 1, null, 0, null, null, null, 0, 0 ],\r\n    [ null, null, null, null, null, null, null, null, null, 0 ],\r\n    [ 1, null, null, null, 0, null, null, null, null, null ],\r\n    [ null, 0, null, 1, null, null, null, null, null, null ],\r\n    [ null, 0, null, null, null, null, 0, null, null, 1 ],\r\n    [ null, null, null, null, null, null, null, 0, null, null ],\r\n    [ null, 0, null, null, null, null, null, null, null, 1 ],\r\n    [ null, null, 1, null, null, null, 1, null, null, null ],\r\n    [ null, 1, null, 1, 1, null, 1, null, null, null ],\r\n    [ null, null, 1, null, null, null, null, null, null, null ]\r\n  ] },\r\n  { id: 11, value: 10, label: '10VH 2019-08-26', grid: [\r\n    [ 0, null, null, null, 1, 1, null, 0, null, 0 ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, 1, null, null, 1, 1, null ],\r\n    [ null, null, null, 0, null, null, null, 1, null, 1 ],\r\n    [ null, 1, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, 1, null, 0, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, 0, null, 1, null, null, 0, null ],\r\n    [ null, null, 1, null, null, null, null, 1, 1, null ]\r\n  ] },\r\n  { id: 12, value: 12, label: '12H 2018-11-14', grid: [\r\n    [ null, null, null, 0, null, null, null, null, null, null, 0, null ],\r\n    [ null, null, 1, null, null, 1, 0, null, null, null, null, null ],\r\n    [ null, 0, 1, null, null, null, null, null, 0, null, 0, null ],\r\n    [ null, 0, null, null, null, null, null, 0, 0, null, null, null ],\r\n    [ null, null, null, null, null, null, 1, null, null, null, null, 1 ],\r\n    [ null, 0, null, null, null, 0, null, null, null, null, null, null ],\r\n    [ null, 0, 0, null, null, null, null, 0, null, null, null, null ],\r\n    [ null, null, null, null, null, null, 1, null, null, null, 1, null ],\r\n    [ null, null, 1, null, 0, null, 1, 1, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, 1, null, 0 ],\r\n    [ null, 0, null, null, 0, 0, null, null, 0, null, null, null ],\r\n    [ null, null, 1, null, null, null, null, null, 1, 1, null, null ]\r\n  ] },\r\n  { id: 13, value: 12, label: '12VH 2018-11-19', grid: [\r\n    [ 0, null, null, null, null, null, null, null, null, 1, null, 0 ],\r\n    [ null, null, 0, null, null, 1, 1, null, null, null, null, null ],\r\n    [ null, null, null, 1, null, null, null, null, 0, null, null, 0 ],\r\n    [ null, 1, 1, null, null, null, null, null, null, null, 1, 1 ],\r\n    [ null, null, null, 1, 1, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, 1, null, 1, null, 1, 0, null ],\r\n    [ null, 0, 0, null, null, 1, null, null, null, 0, null, null ],\r\n    [ null, null, null, null, null, null, null, 0, null, null, null, 1 ],\r\n    [ null, 0, null, null, 1, null, null, 0, null, 1, null, 1 ],\r\n    [ null, null, null, null, null, 0, null, null, null, null, null, null ],\r\n    [ 0, null, null, 1, null, null, 1, null, null, 0, null, 1 ],\r\n    [ null, null, 1, null, null, 0, null, null, null, null, null, null ]\r\n  ] },\r\n  { id: 14, value: 12, label: '12VH 2018-11-26', grid: [\r\n    [ 0, null, null, null, null, 0, 1, null, null, null, null, 0 ],\r\n    [ null, 0, null, 1, null, null, null, 0, 0, null, null, null ],\r\n    [ null, 0, null, null, 1, null, null, null, 0, null, null, null ],\r\n    [ null, null, null, 1, 0, null, null, null, null, null, 1, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, 0 ],\r\n    [ 0, null, 0, 1, null, 1, null, null, null, 1, null, null ],\r\n    [ null, null, null, null, null, null, 0, null, 0, null, null, null ],\r\n    [ null, 0, 0, null, null, 1, null, null, null, null, null, null ],\r\n    [ null, 0, null, 0, null, null, null, 0, null, null, null, 0 ],\r\n    [ null, null, null, null, 1, null, 1, null, null, null, null, 0 ],\r\n    [ null, null, null, null, null, null, 1, 0, null, 0, null, null ],\r\n    [ null, null, 0, null, null, null, null, null, null, 0, null, null ]\r\n  ] },\r\n  { id: 15, value: 12, label: '12VH 2018-11-29', grid: [\r\n    [ null, null, null, 1, null, 1, 1, null, null, 0, null, 1 ],\r\n    [ null, null, 0, 0, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, null, null, null, null, null, 0, null ],\r\n    [ null, null, null, 0, 0, null, 1, null, null, 1, null, 0 ],\r\n    [ null, null, null, 1, 1, null, null, null, null, null, null, null ],\r\n    [ null, 0, null, null, null, null, 1, null, null, 0, null, 0 ],\r\n    [ null, null, 0, null, null, 1, null, null, 1, null, null, null ],\r\n    [ null, null, null, 1, null, null, null, null, null, 0, null, null ],\r\n    [ null, null, null, 1, null, null, 1, null, null, 0, null, null ],\r\n    [ null, null, null, null, 0, null, null, null, 0, null, null, 1 ],\r\n    [ null, 0, null, null, null, null, null, 0, null, 1, null, null ],\r\n    [ null, 0, null, null, 1, 1, null, null, null, null, null, null ]\r\n  ] },\r\n  { id: 16, value: 12, label: '12H 2019-10-08', grid: [\r\n    [ null, 1, null, null, 1, 1, null, null, null, 0, null, null ],\r\n    [ 1, null, 1, null, null, null, 1, null, null, null, 1, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, null, null, null, null, 0, null, 0, null, 0 ],\r\n    [ null, null, null, 1, null, null, 1, null, 1, null, 1, null ],\r\n    [ null, null, null, 1, 0, null, null, null, null, null, null, null ],\r\n    [ null, 1, 1, null, null, 1, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, 0, null, null, 0, null ],\r\n    [ null, null, 0, null, null, null, null, null, null, 1, null, null ],\r\n    [ null, null, null, null, null, null, null, 0, null, null, 0, null ],\r\n    [ null, null, 0, null, 0, null, null, null, null, 0, null, null ],\r\n    [ null, null, null, null, null, null, null, null, 1, null, 1, 1 ]\r\n  ] },\r\n  { id: 17, value: 12, label: '12VH 2019-10-09', grid: [\r\n    [ null, null, null, 0, null, null, 0, null, null, 1, null, null ],\r\n    [ null, 0, null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, 0, null, null, null, null, 1 ],\r\n    [ null, null, null, null, 1, 1, null, null, null, 1, null, null ],\r\n    [ 1, null, null, null, null, 1, null, null, null, null, 1, null ],\r\n    [ null, null, 1, null, null, null, null, null, 1, null, 1, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, 1, null, 0, null, null, null, 0, null, null, null, null ],\r\n    [ null, 1, null, null, 1, 1, null, null, null, null, null, null ],\r\n    [ null, null, 1, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, 1, null, null, null, null, null, null, null, null, 1 ]\r\n  ] },\r\n  { id: 18, value: 12, label: '12?? DUMMY', grid: [\r\n    [ 1, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 0, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ null, null, null, null, null, null, null, null, null, null, null, null ],\r\n    [ 1, null, null, null, null, null, null, null, null, null, null, null ]\r\n  ] }\r\n];\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggerService {\n  logLevel: number;\n\n  constructor() { }\n\n  setLogLevel(logLevel: number = 0) {\n    this.logLevel = logLevel;\n  }\n\n  getLogLevel() {\n    return this.logLevel;\n  }\n}\n","export class Logger {\r\n\r\n  static log(showLog: boolean = false, msg: string) {\r\n    if (showLog) {\r\n      console.log(msg);\r\n    }\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\n\r\nexport class Validater {\r\n\r\n  // Validation of solved puzzle\r\n  //    -- three num in a row\r\n  //    -- correct num of 1s and 0s in row/col\r\n  //    -- duplicate cols/rows\r\n  //    -- etc.\r\n  static validate(showLog: boolean, gridSize: number, tableData: any): boolean {\r\n    Logger.log(showLog, '[Validater] Start');\r\n    const rowArr = [];\r\n    for (let row = 0; row < gridSize; row++) {\r\n      let zeroCount = 0;\r\n      let rowString = '';\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        rowString += '' + tableData[row][col].value;\r\n      }\r\n      // Logger.log(showLog, '[Validater] rowString: ' + rowString);\r\n      if (zeroCount !== (gridSize / 2)) {\r\n        Logger.log(showLog, '[Validater] Wrong number of zeros/ones in row ' + row);\r\n        return false;\r\n      }\r\n      if (rowString.indexOf('000') > -1) {\r\n        Logger.log(showLog, '[Validater] Three zeros in a row in row ' + row);\r\n        return false;\r\n      }\r\n      if (rowString.indexOf('111') > -1) {\r\n        Logger.log(showLog, '[Validater] Three ones in a row in row ' + row);\r\n        return false;\r\n      }\r\n      rowArr.push(rowString);\r\n    }\r\n    const uniqueRowArr = [...Array.from(new Set(rowArr))];\r\n    if (rowArr.length > uniqueRowArr.length) {\r\n      Logger.log(showLog, '[Validater] Rows are not all unique');\r\n      return false;\r\n    }\r\n\r\n    Logger.log(showLog, '[Validater] Rows are valid');\r\n\r\n    const colArr = [];\r\n    for (let col = 0; col < gridSize; col++) {\r\n      let zeroCount = 0;\r\n      let colString = '';\r\n      for (let row = 0; row < gridSize; row++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        colString += '' + tableData[row][col].value;\r\n      }\r\n      // Logger.log(showLog, '[Validater] colString: ' + colString);\r\n      if (zeroCount !== (gridSize / 2)) {\r\n        Logger.log(showLog, '[Validater] Wrong number of zeros/ones in col ' + col);\r\n        return false;\r\n      }\r\n      if (colString.indexOf('000') > -1) {\r\n        Logger.log(showLog, '[Validater] Three zeros in a row in col ' + col);\r\n        return false;\r\n      }\r\n      if (colString.indexOf('111') > -1) {\r\n        Logger.log(showLog, '[Validater] Three ones in a row in col ' + col);\r\n        return false;\r\n      }\r\n      colArr.push(colString);\r\n    }\r\n    const uniqueColArr = [...Array.from(new Set(colArr))];\r\n    if (colArr.length > uniqueColArr.length) {\r\n      Logger.log(showLog, '[Validater] Cols are not all unique');\r\n      return false;\r\n    }\r\n\r\n    Logger.log(showLog, '[Validater] Cols are valid');\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { CheckMiddle } from './solvers/checkMiddle';\r\nimport { CheckTwins } from './solvers/checkTwins';\r\nimport { CheckRowTotals } from './solvers/checkRowTotals';\r\nimport { CheckColTotals } from './solvers/checkColTotals';\r\nimport { CheckColKnownUnknown } from './solvers/checkColKnownUnknown';\r\nimport { CheckRowKnownUnknown } from './solvers/checkRowKnownUnknown';\r\nimport { CheckRowsThreeNulls } from './solvers/checkRowsThreeNulls';\r\nimport { CheckColsThreeNulls } from './solvers/checkColsThreeNulls';\r\nimport { CheckRowsTwoNulls } from './solvers/checkRowsTwoNulls';\r\nimport { CheckColsTwoNulls } from './solvers/checkColsTwoNulls';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n  ],\r\n  declarations: [\r\n    // CheckMiddle,\r\n    // CheckTwins,\r\n    // CheckRowTotals,\r\n    // CheckColTotals,\r\n    // CheckColKnownUnknown,\r\n    // CheckRowKnownUnknown,\r\n    // CheckRowsThreeNulls,\r\n    // CheckColsThreeNulls,\r\n    // CheckRowsTwoNulls,\r\n    // CheckColsTwoNulls\r\n  ],\r\n  exports: [\r\n  ]\r\n})\r\nexport class SolversModule { }\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckColKnownUnknown {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckColKnownUnknown] Start');\r\n    let moveMade = false;\r\n    for (let col = 0; col < gridSize; col++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let colString = '';\r\n      for (let row = 0; row < gridSize; row++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        const currVal = tableData[row][col].value;\r\n        colString += '' + (currVal === null ? 'n' : currVal);\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if (allButOneZero || allButOneOne) {\r\n        // Can put one more zero/one in col\r\n        const ma: RegExpMatchArray = colString.match('1nn+0|0nn+1');\r\n        if (ma != null) {\r\n          console.log('ma: ' + ma);\r\n          console.table(ma);\r\n          const startPos = ma.index;\r\n          const endPos = ma.index + ma[0].length - 1;\r\n          for (let row = 0; row < gridSize; row++) {\r\n            console.log('checking row ' + row);\r\n            console.log('first exp part: ' + (tableData[row][col].value === null));\r\n            console.log('second exp part: ' + !(row >= startPos && row <= endPos));\r\n            console.log('full exp: ' + (tableData[row][col].value === null && !(row >= startPos && row <= endPos)));\r\n            if (tableData[row][col].value === null && !(row >= startPos && row <= endPos)) {\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckColKnownUnknown] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              console.log('[CheckColKnownUnknown] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckColTotals {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckColTotals] Start');\r\n    let moveMade = false;\r\n    for (let col = 0; col < gridSize; col++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      for (let row = 0; row < gridSize; row++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n      }\r\n      if (zeroCount === gridSize / 2) {\r\n        for (let row = 0; row < gridSize; row++) {\r\n          if (tableData[row][col].value === null) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckColTotals.1] Setting cell[' + row + '][' + col + '] to 1');\r\n            tableData[row][col].value = 1;\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n      if (oneCount === gridSize / 2) {\r\n        for (let row = 0; row < gridSize; row++) {\r\n          if (tableData[row][col].value === null) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckColTotals.2] Setting cell[' + row + '][' + col + '] to 0');\r\n            tableData[row][col].value = 0;\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckColsThreeNulls {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckColsThreeNulls] Start');\r\n    let moveMade = false;\r\n    for (let col = 0; col < gridSize; col++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let nullCount = 0;\r\n      for (let row = 0; row < gridSize; row++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        if (tableData[row][col].value === null) {\r\n          nullCount++;\r\n        }\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if (allButOneZero || allButOneOne) {\r\n        // Can put one more zero/one in col\r\n        // Check for 3 consecutive nulls\r\n        let foundNulls = [];\r\n        for (let row = 1; row < (gridSize - 1); row++) {\r\n          if (tableData[row][col].value === null) {\r\n            const above = (row - 1 >= 0) ? tableData[row - 1][col].value : null;\r\n            const below = (row + 1 < gridSize) ? tableData[row + 1][col].value : null;\r\n            if (above === null && below === null) {\r\n              Logger.log(showLog(LogLevels.TRACE), '[CheckColsThreeNulls] THREE NULLS FOUND in col: ' + col);\r\n              foundNulls = [ row - 1 , row, row + 1 ];\r\n            }\r\n          }\r\n        }\r\n        if (foundNulls.length) {\r\n          Logger.log(showLog(LogLevels.TRACE), '[CheckColsThreeNulls] foundNulls in rows: ' + foundNulls);\r\n          for (let row = 0; row < gridSize; row++) {\r\n            if (tableData[row][col].value === null && !(foundNulls.indexOf(row) > -1)) {\r\n              // Fill in other null cells with the opposite of the allButOne that's not in the three\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckColsThreeNulls.1] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n            if (nullCount === 3 // There's only 3 nulls\r\n              && tableData[row][col].value === null // this value is null\r\n              ) {\r\n              const val = allButOneZero ? 1 : 0;\r\n              if (row === 0) { // This row is top edge\r\n                // Fill in null cell at border with the opposite of the allButOne\r\n                if (val === (tableData[row + 3][col].value)) {\r\n                  // If opposite cell is not the allButOne\r\n                  Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.2a] Setting cell[' + row + '][' + col + '] to ' + val);\r\n                  tableData[row][col].value = allButOneZero ? 1 : 0;\r\n                  moveMade = true;\r\n                }\r\n              }\r\n              if (row === (gridSize - 1)) { // This row is bottom edge\r\n                // Fill in null cell at border with the opposite of the allButOne\r\n                if (val === (tableData[row - 3][col].value)) {\r\n                  // If opposite cell is not the allButOne\r\n                  Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.2b] Setting cell[' + row + '][' + col + '] to ' + val);\r\n                  tableData[row][col].value = allButOneZero ? 1 : 0;\r\n                  moveMade = true;\r\n                }\r\n              }\r\n            }\r\n            const topBorder = foundNulls[0] - 1;\r\n            const bottomBorder = foundNulls[2] + 1;\r\n            if (nullCount === 3 // There's only 3 nulls\r\n                && (foundNulls[0] > 0 && foundNulls[2] < (gridSize - 1)) // This row is not at an edge\r\n                ) {\r\n              if (tableData[topBorder][col].value === tableData[bottomBorder][col].value) {\r\n                // The edges of the nulls equal\r\n                if (((allButOneZero && tableData[topBorder][col].value === 1)\r\n                  // All but one zero, edges are ones\r\n                  || (allButOneOne && tableData[topBorder][col].value === 0))\r\n                    && tableData[foundNulls[1]][col].value === null // this value is null\r\n                  ) {\r\n                  // All but one one, edges are zeros\r\n                  // Fill in center of null cells with the opposite of the borders\r\n                  const newVal = (tableData[foundNulls[0] - 1][col].value === 1) ? 0 : 1;\r\n                  Logger.log(showLog(LogLevels.INFO),\r\n                    '[CheckColsThreeNulls.3] Setting cell[' + foundNulls[1] + '][' + col + '] to ' + newVal);\r\n                  tableData[foundNulls[1]][col].value = newVal;\r\n                  moveMade = true;\r\n                }\r\n              } else {\r\n                if (allButOneZero\r\n                  && (tableData[topBorder][col].value === 0 || tableData[bottomBorder][col].value === 0)) {\r\n                  if (tableData[topBorder][col].value === 0\r\n                    && tableData[foundNulls[0]][col].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.4a] Setting cell[' + foundNulls[0] + '][' + col + '] to 1');\r\n                    tableData[foundNulls[0]][col].value = 1;\r\n                    moveMade = true;\r\n                  }\r\n                  if (tableData[bottomBorder][col].value === 0\r\n                    && tableData[foundNulls[2]][col].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.4b] Setting cell[' + foundNulls[2] + '][' + col + '] to 1');\r\n                    tableData[foundNulls[2]][col].value = 1;\r\n                    moveMade = true;\r\n                  }\r\n                }\r\n                if (allButOneOne\r\n                  && (tableData[topBorder][col].value === 1 || tableData[bottomBorder][col].value === 1)) {\r\n                  if (tableData[topBorder][col].value === 1\r\n                    && tableData[foundNulls[0]][col].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.4c] Setting cell[' + foundNulls[0] + '][' + col + '] to 0');\r\n                    tableData[foundNulls[0]][col].value = 0;\r\n                    moveMade = true;\r\n                  }\r\n                  if (tableData[bottomBorder][col].value === 1\r\n                    && tableData[foundNulls[2]][col].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckColsThreeNulls.4d] Setting cell[' + foundNulls[2] + '][' + col + '] to 0');\r\n                    tableData[foundNulls[2]][col].value = 0;\r\n                    moveMade = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckColsTwoNulls {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckColsTwoNulls] Start');\r\n    let moveMade = false;\r\n    for (let col = 0; col < gridSize; col++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let colString = '';\r\n      for (let row = 0; row < gridSize; row++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        const currVal = tableData[row][col].value;\r\n        colString += '' + (currVal === null ? 'n' : currVal);\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if ((allButOneZero && colString.indexOf('1nn1') > -1)\r\n          // Need to put last zero in 1nn1, all else are 1\r\n        || (allButOneOne && colString.indexOf('0nn0') > -1)) {\r\n          // Need to put last one in 0nn0, all else are 0\r\n        const foundPos = colString.indexOf('0nn0') > -1 ? colString.indexOf('0nn0') : colString.indexOf('1nn1');\r\n        if (foundPos > -1) {\r\n          const foundRows = [ foundPos, foundPos + 1, foundPos + 2, foundPos + 3 ];\r\n          Logger.log(showLog(LogLevels.TRACE), '[CheckColsTwoNulls] Rows: ' + foundRows);\r\n          for (let row = 0; row < gridSize; row++) {\r\n            if (tableData[row][col].value === null && !(foundRows.indexOf(row) > -1)) {\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckColsTwoNulls] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckMiddle {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckMiddle] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === null) {\r\n          const above = (row - 1 >= 0) ? tableData[row - 1][col].value : null;\r\n          const below = (row + 1 < gridSize) ? tableData[row + 1][col].value : null;\r\n          if (above !== null && above === below) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckMiddle.1] Setting cell[' + row + '][' + col + '] to: ' + (above === 1 ? 0 : 1));\r\n            tableData[row][col].value = above === 1 ? 0 : 1;\r\n            moveMade = true;\r\n          } else {\r\n            const left = (col - 1 >= 0) ? tableData[row][col - 1].value : null;\r\n            const right = (col + 1 < gridSize) ? tableData[row][col + 1].value : null;\r\n            if (left !== null && left === right) {\r\n              Logger.log(showLog(LogLevels.INFO), '[CheckMiddle.2] Setting cell[' + row + '][' + col + '] to: ' + (left === 1 ? 0 : 1));\r\n              tableData[row][col].value = left === 1 ? 0 : 1;\r\n              moveMade = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckRowKnownUnknown {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckRowKnownUnknown] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let rowString = '';\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        const currVal = tableData[row][col].value;\r\n        rowString += '' + (currVal === null ? 'n' : currVal);\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if (allButOneZero || allButOneOne) {\r\n        // Can put one more zero/one in row\r\n        const foundPos = rowString.indexOf('1nn0') > -1 ? rowString.indexOf('1nn0') : rowString.indexOf('0nn1');\r\n        if (foundPos > -1) {\r\n          const foundCols = [ foundPos, foundPos + 1, foundPos + 2, foundPos + 3 ];\r\n          Logger.log(showLog(LogLevels.TRACE), '[CheckRowKnownUnknown] Cols: ' + foundCols);\r\n          for (let col = 0; col < gridSize; col++) {\r\n            if (tableData[row][col].value === null && !(foundCols.indexOf(col) > -1)) {\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckRowKnownUnknown] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckRowTotals {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckRowTotals] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n      }\r\n      if (zeroCount === gridSize / 2) {\r\n        for (let col = 0; col < gridSize; col++) {\r\n          if (tableData[row][col].value === null) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckRowTotals.1] Setting cell[' + row + '][' + col + '] to 1');\r\n            tableData[row][col].value = 1;\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n      if (oneCount === gridSize / 2) {\r\n        for (let col = 0; col < gridSize; col++) {\r\n          if (tableData[row][col].value === null) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckRowTotals.2] Setting cell[' + row + '][' + col + '] to 0');\r\n            tableData[row][col].value = 0;\r\n            moveMade = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckRowsThreeNulls {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckRowsThreeNulls] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let nullCount = 0;\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        if (tableData[row][col].value === null) {\r\n          nullCount++;\r\n        }\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if (allButOneZero || allButOneOne) {\r\n        // Can put one more zero/one in row\r\n        // Check for 3 consecutive nulls\r\n        let foundNulls = [];\r\n        for (let col = 1; col < (gridSize - 1); col++) {\r\n          if (tableData[row][col].value === null) {\r\n            const left = (col - 1 >= 0) ? tableData[row][col - 1].value : null;\r\n            const right = (col + 1 < gridSize) ? tableData[row][col + 1].value : null;\r\n            if (left === null && right === null) {\r\n              Logger.log(showLog(LogLevels.TRACE), '[CheckRowsThreeNulls] THREE NULLS FOUND in row: ' + row);\r\n              foundNulls = [ col - 1 , col, col + 1 ];\r\n            }\r\n          }\r\n        }\r\n        if (foundNulls.length) {\r\n          Logger.log(showLog(LogLevels.TRACE), '[CheckRowsThreeNulls] foundNulls in cols: ' + foundNulls);\r\n          for (let col = 0; col < gridSize; col++) {\r\n            if (tableData[row][col].value === null && !(foundNulls.indexOf(col) > -1)) {\r\n              // Fill in other null cells with the opposite of the allButOne that's not in the three\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckRowsThreeNulls.1] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n            if (nullCount === 3 // There's only 3 nulls\r\n              && tableData[row][col].value === null // this value is null\r\n              ) {\r\n              const val = allButOneZero ? 1 : 0;\r\n              if (col === 0) { // This col is left edge\r\n                // Fill in null cell at border with the opposite of the allButOne\r\n                if (val === (tableData[row][col + 3].value)) {\r\n                  // If opposite cell is not the allButOne\r\n                  Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.2a] Setting cell[' + row + '][' + col + '] to ' + val);\r\n                  tableData[row][col].value = allButOneZero ? 1 : 0;\r\n                  moveMade = true;\r\n                }\r\n              }\r\n              if (col === (gridSize - 1)) { // This col is right edge\r\n                // Fill in null cell at border with the opposite of the allButOne\r\n                if (val === (tableData[row][col - 3].value)) {\r\n                  // If opposite cell is not the allButOne\r\n                  Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.2b] Setting cell[' + row + '][' + col + '] to ' + val);\r\n                  tableData[row][col].value = allButOneZero ? 1 : 0;\r\n                  moveMade = true;\r\n                }\r\n              }\r\n            }\r\n            const leftBorder = foundNulls[0] - 1;\r\n            const rightBorder = foundNulls[2] + 1;\r\n            if (nullCount === 3 // There's only 3 nulls\r\n                && (foundNulls[0] > 0 && foundNulls[2] < (gridSize - 1)) // This col is not at an edge\r\n                ) {\r\n              if (tableData[row][leftBorder].value === tableData[row][rightBorder].value) {\r\n                // The edges of the nulls equal\r\n                if (((allButOneZero && tableData[row][leftBorder].value === 1)\r\n                  // All but one zero, edges are ones\r\n                  || (allButOneOne && tableData[row][leftBorder].value === 0))\r\n                    && tableData[row][foundNulls[1]].value === null // this value is null\r\n                  ) {\r\n                  // All but one one, edges are zeros\r\n                  // Fill in center of null cells with the opposite of the borders (1)\r\n                  const newVal = (tableData[row][foundNulls[0] - 1].value === 1) ? 0 : 1;\r\n                  Logger.log(showLog(LogLevels.INFO),\r\n                    '[CheckRowsThreeNulls.3] Setting cell[' + row + '][' + foundNulls[1] + '] to ' + newVal);\r\n                  tableData[row][foundNulls[1]].value = newVal;\r\n                  moveMade = true;\r\n                }\r\n              } else {\r\n                if (allButOneZero\r\n                  && (tableData[row][leftBorder].value === 0 || tableData[row][rightBorder].value === 0)) {\r\n                  if (tableData[row][leftBorder].value === 0\r\n                    && tableData[row][foundNulls[0]].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.4a] Setting cell[' + row + '][' + foundNulls[0] + '] to 1');\r\n                    tableData[row][foundNulls[0]].value = 1;\r\n                    moveMade = true;\r\n                  }\r\n                  if (tableData[row][rightBorder].value === 0\r\n                    && tableData[row][foundNulls[2]].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.4b] Setting cell[' + row + '][' + foundNulls[2] + '] to 1');\r\n                    tableData[row][foundNulls[2]].value = 1;\r\n                    moveMade = true;\r\n                  }\r\n                }\r\n                if (allButOneOne\r\n                  && (tableData[row][leftBorder].value === 1 || tableData[row][rightBorder].value === 1)) {\r\n                  if (tableData[row][leftBorder].value === 1\r\n                    && tableData[row][foundNulls[0]].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.4c] Setting cell[' + row + '][' + foundNulls[0] + '] to 0');\r\n                    tableData[row][foundNulls[0]].value = 0;\r\n                    moveMade = true;\r\n                  }\r\n                  if (tableData[row][rightBorder].value === 1\r\n                    && tableData[row][foundNulls[2]].value === null // this value is null\r\n                    ) {\r\n                    Logger.log(showLog(LogLevels.INFO), '[CheckRowsThreeNulls.4d] Setting cell[' + row + '][' + foundNulls[2] + '] to 0');\r\n                    tableData[row][foundNulls[2]].value = 0;\r\n                    moveMade = true;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckRowsTwoNulls {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckRowsTwoNulls] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      let zeroCount = 0;\r\n      let oneCount = 0;\r\n      let rowString = '';\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === 0) {\r\n          zeroCount++;\r\n        }\r\n        if (tableData[row][col].value === 1) {\r\n          oneCount++;\r\n        }\r\n        const currVal = tableData[row][col].value;\r\n        rowString += '' + (currVal === null ? 'n' : currVal);\r\n      }\r\n      const allButOneZero = (zeroCount === (gridSize / 2) - 1);\r\n      const allButOneOne = (oneCount === (gridSize / 2) - 1);\r\n      if ((allButOneZero && rowString.indexOf('1nn1') > -1)\r\n          // Need to put last zero in 1nn1, all else are 1\r\n        || (allButOneOne && rowString.indexOf('0nn0') > -1)) {\r\n          // Need to put last one in 0nn0, all else are 0\r\n        const foundPos = rowString.indexOf('0nn0') > -1 ? rowString.indexOf('0nn0') : rowString.indexOf('1nn1');\r\n        if (foundPos > -1) {\r\n          const foundCols = [ foundPos, foundPos + 1, foundPos + 2, foundPos + 3 ];\r\n          Logger.log(showLog(LogLevels.TRACE), '[CheckRowsTwoNulls] Cols: ' + foundCols);\r\n          for (let col = 0; col < gridSize; col++) {\r\n            if (tableData[row][col].value === null && !(foundCols.indexOf(col) > -1)) {\r\n              Logger.log(showLog(LogLevels.INFO),\r\n                '[CheckRowsTwoNulls] Setting cell[' + row + '][' + col + '] to ' + (allButOneZero ? 1 : 0));\r\n              tableData[row][col].value = allButOneZero ? 1 : 0;\r\n              moveMade = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","import { Logger } from '../../shared/services/logger';\r\nimport { LogLevels } from '../../shared/models/log.model';\r\n\r\nexport class CheckTwins {\r\n\r\n  static check(gridSize: number, tableData: any, logLevel: number = 0): boolean {\r\n    const showLog = (myLevel) => (logLevel >= myLevel);\r\n    Logger.log(showLog(LogLevels.TRACE), '[CheckTwins] Start');\r\n    let moveMade = false;\r\n    for (let row = 0; row < gridSize; row++) {\r\n      for (let col = 0; col < gridSize; col++) {\r\n        if (tableData[row][col].value === null) {\r\n          const above1 = (row - 1 >= 0) ? tableData[row - 1][col].value : null;\r\n          const above2 = (row - 2 >= 0) ? tableData[row - 2][col].value : null;\r\n          if (above1 !== null && above1 === above2) {\r\n            Logger.log(showLog(LogLevels.INFO), '[CheckTwins.1] Setting cell[' + row + '][' + col + '] to: ' + (above1 === 1 ? 0 : 1));\r\n            tableData[row][col].value = above1 === 1 ? 0 : 1;\r\n            moveMade = true;\r\n          } else {\r\n            const below1 = (row + 1 < gridSize) ? tableData[row + 1][col].value : null;\r\n            const below2 = (row + 2 < gridSize) ? tableData[row + 2][col].value : null;\r\n            if (below1 !== null && below1 === below2) {\r\n              Logger.log(showLog(LogLevels.INFO), '[CheckTwins.2] Setting cell[' + row + '][' + col + '] to: ' + (below1 === 1 ? 0 : 1));\r\n              tableData[row][col].value = below1 === 1 ? 0 : 1;\r\n              moveMade = true;\r\n            } else {\r\n              const left1 = (col - 1 >= 0) ? tableData[row][col - 1].value : null;\r\n              const left2 = (col - 2 >= 0) ? tableData[row][col - 2].value : null;\r\n              if (left1 !== null && left1 === left2) {\r\n                Logger.log(showLog(LogLevels.INFO), '[CheckTwins.3] Setting cell[' + row + '][' + col + '] to: ' + (left1 === 1 ? 0 : 1));\r\n                tableData[row][col].value = left1 === 1 ? 0 : 1;\r\n                moveMade = true;\r\n              } else {\r\n                const right1 = (col + 1 < gridSize) ? tableData[row][col + 1].value : null;\r\n                const right2 = (col + 2 < gridSize) ? tableData[row][col + 2].value : null;\r\n                if (right1 !== null && right1 === right2) {\r\n                  Logger.log(showLog(LogLevels.INFO), '[CheckTwins.4] Setting cell[' + row + '][' + col + '] to: ' + (right1 === 1 ? 0 : 1));\r\n                  tableData[row][col].value = right1 === 1 ? 0 : 1;\r\n                  moveMade = true;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return moveMade;\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}